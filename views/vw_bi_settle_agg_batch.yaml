resources:
 - name: vw_bi_settle_agg_batch
   type: bigquery.v2.table
   properties:
     datasetId: consumption_layer
     tableReference:
       projectId: PROJECT_ID
       tableId: vw_bi_settle_agg_batch
     labels:
       apigateway: not-applicable
       bus_contact: mark-kubik
       businessregion: us
       cloudzone: google-us
       company: globalpay
       costcenter: finance
       country: us
       dataclassification: dc2
       department: product-development
       description: vw_bi_settle_agg_batch
       eol_date: not-applicable
       group: application-delivery
       lifecycle: development
       organization: bts
       prj_code: business-view
       productversion: 10
       project: PROJECT_ID
       resourcename: location-table
       service: gcp-cloud-datalake
       sla: gold
       status: development
       support_contact: roberto_belardo
       tech_contact: venu-vidyashankar
       tier: gcp-bigquery
     view:
       query: select max(seq_key) as seq_key ,t2.file_date_time ,t2.card_acceptor_id ,t2.batch_control_number ,max(t2.merchant_dba_name) as merchant_dba_name ,max(merchant_category_code) as merchant_category_code ,sum(t2.batch_count) as batch_count ,sum(t2.batch_amount) as batch_amount ,sum(t2.batch_ma_cnt) as batch_ma_count ,sum(t2.batch_ma_amt) as batch_ma_amount ,sum(t2.total_batch_ma_cnt) as total_batch_ma_count ,sum(t2.total_batch_ma_amt) as total_batch_ma_amount ,sum(t2.batch_settlement_amount) as batch_settlement_amount ,sum(t2.purchase_count) as purchase_count ,sum(t2.purchase_amount) as purchase_amount ,sum(t2.refund_count) as refund_count ,sum(t2.refund_amount) as refund_amount ,sum(t2.adj_amount) as adj_amount ,sum(t2.adj_count) as adj_count ,sum(t2.adj_purchase_amount) as adj_purchase_amount ,sum(t2.adj_purchase_count) as adj_purchase_count ,sum(t2.adj_refund_amount) as adj_refund_amount ,sum(t2.adj_refund_count) as adj_refund_count ,sum(t2.ax_amount) as ax_amount ,sum(t2.ax_count) as ax_count ,sum(t2.ax_purchase_amount) as ax_purchase_amount ,sum(t2.ax_purchase_count) as ax_purchase_count ,sum(t2.ax_refund_amount) as ax_refund_amount ,sum(t2.ax_refund_count) as ax_refund_count ,sum(t2.cbrt_amount) as cbrt_amount ,sum(t2.cbrt_count) as cbrt_count ,sum(t2.cbrt_purchase_amount) as cbrt_purchase_amount ,sum(t2.cbrt_purchase_count) as cbrt_purchase_count ,sum(t2.cbrt_refund_amount) as cbrt_refund_amount ,sum(t2.cbrt_refund_count) as cbrt_refund_count ,sum(t2.cup_amount) as cup_amount ,sum(t2.cup_count) as cup_count ,sum(t2.cup_purchase_amount) as cup_purchase_amount ,sum(t2.cup_purchase_count) as cup_purchase_count ,sum(t2.cup_refund_amount) as cup_refund_amount ,sum(t2.cup_refund_count) as cup_refund_count ,sum(t2.db_amount) as db_amount ,sum(t2.db_count) as db_count ,sum(t2.db_purchase_amount) as db_purchase_amount ,sum(t2.db_purchase_count) as db_purchase_count ,sum(t2.db_refund_amount) as db_refund_amount ,sum(t2.db_refund_count) as db_refund_count ,sum(t2.dc_amount) as dc_amount ,sum(t2.dc_count) as dc_count ,sum(t2.dc_purchase_amount) as dc_purchase_amount ,sum(t2.dc_purchase_count) as dc_purchase_count ,sum(t2.dc_refund_amount) as dc_refund_amount ,sum(t2.dc_refund_count) as dc_refund_count ,sum(t2.di_amount) as di_amount ,sum(t2.di_count) as di_count ,sum(t2.di_purchase_amount) as di_purchase_amount ,sum(t2.di_purchase_count) as di_purchase_count ,sum(t2.di_refund_amount) as di_refund_amount ,sum(t2.di_refund_count) as di_refund_count ,sum(t2.ebt_amount) as ebt_amount ,sum(t2.ebt_count) as ebt_count ,sum(t2.ebt_purchase_amount) as ebt_purchase_amount ,sum(t2.ebt_purchase_count) as ebt_purchase_count ,sum(t2.ebt_refund_amount) as ebt_refund_amount ,sum(t2.ebt_refund_count) as ebt_refund_count ,sum(t2.jcb_amount) as jcb_amount ,sum(t2.jcb_count) as jcb_count ,sum(t2.jcb_purchase_amount) as jcb_purchase_amount ,sum(t2.jcb_purchase_count) as jcb_purchase_count ,sum(t2.jcb_refund_amount) as jcb_refund_amount ,sum(t2.jcb_refund_count) as jcb_refund_count ,sum(t2.mc_amount) as mc_amount ,sum(t2.mc_count) as mc_count ,sum(t2.mc_purchase_amount) as mc_purchase_amount ,sum(t2.mc_purchase_count) as mc_purchase_count ,sum(t2.mc_refund_amount) as mc_refund_amount ,sum(t2.mc_refund_count) as mc_refund_count ,sum(t2.pl_amount) as pl_amount ,sum(t2.pl_count) as pl_count ,sum(t2.pl_purchase_amount) as pl_purchase_amount ,sum(t2.pl_purchase_count) as pl_purchase_count ,sum(t2.pl_refund_amount) as pl_refund_amount ,sum(t2.pl_refund_count) as pl_refund_count ,sum(t2.vi_amount) as vi_amount ,sum(t2.vi_count) as vi_count ,sum(t2.vi_purchase_amount) as vi_purchase_amount ,sum(t2.vi_purchase_count) as vi_purchase_count ,sum(t2.vi_refund_amount) as vi_refund_amount ,sum(t2.vi_refund_count) as vi_refund_count ,sum(t2.purchase_credit_count) as purchase_credit_count ,sum(t2.purchase_credit_amt) as purchase_credit_amount ,sum(t2.return_credit_count) as return_credit_count ,sum(t2.return_credit_amt) as return_credit_amount ,sum(t2.total_tot_count) as total_tot_count ,sum(t2.total_tot_amt) as total_tot_amount ,1 as batch_count_d ,t2.merchant_number ,t2.corporate ,t2.region ,t2.principal ,t2.associate ,t2.chain ,0 as source_file_key ,t2.currency_code ,t2.batch_settlement_currency ,t2.hierarchy ,t2.card_scheme from (select seq_key ,t1.file_date_time ,t1.card_acceptor_id as card_acceptor_id ,t1.batch_control_number ,t1.merchant_dba_name ,t1.merchant_category_code ,t1.batch_count ,t1.batch_amount ,t1.batch_count as batch_ma_cnt ,t1.batch_amount as batch_ma_amt ,t1.batch_count as total_batch_ma_cnt ,t1.batch_amount as total_batch_ma_amt ,case when t1.settled_amount is null then t1.batch_amount else t1.settled_amount end as batch_settlement_amount ,t1.purchase_count ,t1.purchase_amount ,t1.refund_count ,t1.refund_amount ,t1.card_scheme ,case when (t1.card_scheme = 'ADJ') then t1.scheme_batch_amount else 0 end as adj_amount ,case when (t1.card_scheme = 'ADJ') then t1.scheme_batch_count else 0 end as adj_count ,case when (t1.card_scheme = 'ADJ') then t1.scheme_purchase_amount else 0 end as adj_purchase_amount ,case when (t1.card_scheme = 'ADJ') then t1.scheme_purchase_count else 0 end as adj_purchase_count ,case when (t1.card_scheme = 'ADJ') then t1.scheme_refund_amount else 0 end as adj_refund_amount ,case when (t1.card_scheme = 'ADJ') then t1.scheme_refund_count else 0 end as adj_refund_count ,case when (t1.card_scheme = 'AX') then t1.scheme_batch_amount else 0 end as ax_amount ,case when (t1.card_scheme = 'AX') then t1.scheme_batch_count else 0 end as ax_count ,case when (t1.card_scheme = 'AX') then t1.scheme_purchase_amount else 0 end as ax_purchase_amount ,case when (t1.card_scheme = 'AX') then t1.scheme_purchase_count else 0 end as ax_purchase_count ,case when (t1.card_scheme = 'AX') then t1.scheme_refund_amount else 0 end as ax_refund_amount ,case when (t1.card_scheme = 'AX') then t1.scheme_refund_count else 0 end as ax_refund_count ,case when (t1.card_scheme = 'CBRT') then t1.scheme_batch_amount else 0 end as cbrt_amount ,case when (t1.card_scheme = 'CBRT') then t1.scheme_batch_count else 0 end as cbrt_count ,case when (t1.card_scheme = 'CBRT') then t1.scheme_purchase_amount else 0 end as cbrt_purchase_amount ,case when (t1.card_scheme = 'CBRT') then t1.scheme_purchase_count else 0 end as cbrt_purchase_count ,case when (t1.card_scheme = 'CBRT') then t1.scheme_refund_amount else 0 end as cbrt_refund_amount ,case when (t1.card_scheme = 'CBRT') then t1.scheme_refund_count else 0 end as cbrt_refund_count ,case when (t1.card_scheme = 'CUP') then t1.scheme_batch_amount else 0 end as cup_amount ,case when (t1.card_scheme = 'CUP') then t1.scheme_batch_count else 0 end as cup_count ,case when (t1.card_scheme = 'CUP') then t1.scheme_purchase_amount else 0 end as cup_purchase_amount ,case when (t1.card_scheme = 'CUP') then t1.scheme_purchase_count else 0 end as cup_purchase_count ,case when (t1.card_scheme = 'CUP') then t1.scheme_refund_amount else 0 end as cup_refund_amount ,case when (t1.card_scheme = 'CUP') then t1.scheme_refund_count else 0 end as cup_refund_count ,(case when (t1.card_scheme = 'DB') then t1.scheme_batch_amount else 0 end ) + (case when (t1.card_scheme = 'MES') then t1.scheme_batch_amount else 0 end ) as db_amount ,(case when (t1.card_scheme = 'DB') then t1.scheme_batch_count else 0 end )+  (case when (t1.card_scheme = 'MES') then t1.scheme_batch_count else 0 end )  as db_count ,(case when (t1.card_scheme = 'DB') then t1.scheme_purchase_amount else 0 end )+  (case when (t1.card_scheme = 'MES') then t1.scheme_purchase_amount else 0 end ) as db_purchase_amount ,(case when (t1.card_scheme = 'DB') then t1.scheme_purchase_count else 0 end ) +  (case when (t1.card_scheme = 'MES') then t1.scheme_purchase_count else 0 end )  as db_purchase_count ,(case when (t1.card_scheme = 'DB') then t1.scheme_refund_amount else 0 end )  +  (case when (t1.card_scheme = 'MES') then t1.scheme_refund_amount else 0 end )  as db_refund_amount ,(case when (t1.card_scheme = 'DB') then t1.scheme_refund_count else 0 end ) +  (case when (t1.card_scheme = 'MES') then t1.scheme_refund_count else 0 end ) as db_refund_count ,case when (t1.card_scheme = 'DC') then t1.scheme_batch_amount else 0 end as dc_amount ,case when (t1.card_scheme = 'DC') then t1.scheme_batch_count else 0 end as dc_count ,case when (t1.card_scheme = 'DC') then t1.scheme_purchase_amount else 0 end as dc_purchase_amount ,case when (t1.card_scheme = 'DC') then t1.scheme_purchase_count else 0 end as dc_purchase_count ,case when (t1.card_scheme = 'DC') then t1.scheme_refund_amount else 0 end as dc_refund_amount ,case when (t1.card_scheme = 'DC') then t1.scheme_refund_count else 0 end as dc_refund_count ,case when (t1.card_scheme = 'DI') then t1.scheme_batch_amount else 0 end as di_amount ,case when (t1.card_scheme = 'DI') then t1.scheme_batch_count else 0 end as di_count ,case when (t1.card_scheme = 'DI') then t1.scheme_purchase_amount else 0 end as di_purchase_amount ,case when (t1.card_scheme = 'DI') then t1.scheme_purchase_count else 0 end as di_purchase_count ,case when (t1.card_scheme = 'DI') then t1.scheme_refund_amount else 0 end as di_refund_amount ,case when (t1.card_scheme = 'DI') then t1.scheme_refund_count else 0 end as di_refund_count ,case when (t1.card_scheme = 'EBT') then t1.scheme_batch_amount else 0 end as ebt_amount ,case when (t1.card_scheme = 'EBT') then t1.scheme_batch_count else 0 end as ebt_count ,case when (t1.card_scheme = 'EBT') then t1.scheme_purchase_amount else 0 end as ebt_purchase_amount ,case when (t1.card_scheme = 'EBT') then t1.scheme_purchase_count else 0 end as ebt_purchase_count ,case when (t1.card_scheme = 'EBT') then t1.scheme_refund_amount else 0 end as ebt_refund_amount ,case when (t1.card_scheme = 'EBT') then t1.scheme_refund_count else 0 end as ebt_refund_count ,case when (t1.card_scheme = 'JCB') then t1.scheme_batch_amount else 0 end as jcb_amount ,case when (t1.card_scheme = 'JCB') then t1.scheme_batch_count else 0 end as jcb_count ,case when (t1.card_scheme = 'JCB') then t1.scheme_purchase_amount else 0 end as jcb_purchase_amount ,case when (t1.card_scheme = 'JCB') then t1.scheme_purchase_count else 0 end as jcb_purchase_count ,case when (t1.card_scheme = 'JCB') then t1.scheme_refund_amount else 0 end as jcb_refund_amount ,case when (t1.card_scheme = 'JCB') then t1.scheme_refund_count else 0 end as jcb_refund_count ,case when (t1.card_scheme = 'MC') then t1.scheme_batch_amount else 0 end as mc_amount ,case when (t1.card_scheme = 'MC') then t1.scheme_batch_count else 0 end as mc_count ,case when (t1.card_scheme = 'MC') then t1.scheme_purchase_amount else 0 end as mc_purchase_amount ,case when (t1.card_scheme = 'MC') then t1.scheme_purchase_count else 0 end as mc_purchase_count ,case when (t1.card_scheme = 'MC') then t1.scheme_refund_amount else 0 end as mc_refund_amount ,case when (t1.card_scheme = 'MC') then t1.scheme_refund_count else 0 end as mc_refund_count ,case when (t1.card_scheme = 'PL') then t1.scheme_batch_amount else 0 end as pl_amount ,case when (t1.card_scheme = 'PL') then t1.scheme_batch_count else 0 end as pl_count ,case when (t1.card_scheme = 'PL') then t1.scheme_purchase_amount else 0 end as pl_purchase_amount ,case when (t1.card_scheme = 'PL') then t1.scheme_purchase_count else 0 end as pl_purchase_count ,case when (t1.card_scheme = 'PL') then t1.scheme_refund_amount else 0 end as pl_refund_amount ,case when (t1.card_scheme = 'PL') then t1.scheme_refund_count else 0 end as pl_refund_count ,case when (t1.card_scheme = 'VI') then t1.scheme_batch_amount else 0 end as vi_amount ,case when (t1.card_scheme = 'VI') then t1.scheme_batch_count else 0 end as vi_count ,case when (t1.card_scheme = 'VI') then t1.scheme_purchase_amount else 0 end as vi_purchase_amount ,case when (t1.card_scheme = 'VI') then t1.scheme_purchase_count else 0 end as vi_purchase_count ,case when (t1.card_scheme = 'VI') then t1.scheme_refund_amount else 0 end as vi_refund_amount ,case when (t1.card_scheme = 'VI') then t1.scheme_refund_count else 0 end as vi_refund_count ,((t1.purchase_count) - ((case when (t1.card_scheme = 'DB') then t1.scheme_purchase_count else 0 end )  + (case when (t1.card_scheme = 'MES') then t1.scheme_purchase_count else 0 end ))) as purchase_credit_count ,((t1.purchase_amount) - ((case when (t1.card_scheme = 'DB') then t1.scheme_purchase_amount else 0 end )  + (case when (t1.card_scheme = 'MES') then t1.scheme_purchase_amount else 0 end))) as purchase_credit_amt ,((t1.refund_count) - ((case when (t1.card_scheme = 'DB') then t1.scheme_refund_count else 0 end )  + (case when (t1.card_scheme = 'MES') then t1.scheme_refund_count else 0 end ))) as return_credit_count ,((t1.refund_amount) - ((case when (t1.card_scheme = 'DB') then t1.scheme_refund_amount else 0 end ) + (case when (t1.card_scheme = 'MES') then t1.scheme_refund_amount else 0 end ))) as return_credit_amt ,(t1.purchase_count + t1.refund_count) as total_tot_count ,(t1.purchase_amount - t1.refund_amount) as total_tot_amt ,t1.merchant_number ,t1.corporate ,t1.region ,t1.principal ,t1.associate ,t1.chain ,t1.alpha_currency_code as currency_code ,case when (t1.settle_alpha_currency_code is null) then t1.alpha_currency_code else t1.settle_alpha_currency_code end as batch_settlement_currency ,CONCAT( t1.corporate,t1.region,t1.principal,t1.associate,t1.chain) as hierarchy from (select max(a.seq_key) as seq_key ,a.dif_tran_code as trans_code ,a.dif_card_scheme as card_scheme ,a.merchant_number ,a.corporate ,a.region ,a.principal ,a.associate ,a.chain ,cast(concat(cast(a.dif_file_date as string),' ','00:00:00') as timestamp) as file_date_time ,a.dif_card_acceptor_id as card_acceptor_id ,a.dif_batch_control_number as batch_control_number ,max(a.dif_merchant_dba_name) as  merchant_dba_name ,max(a.dif_merchant_category_code) as merchant_category_code ,a.dif_alpha_currency_code as alpha_currency_code ,sum(a.dif_settled_amount) as settled_amount ,a.settle_alpha_currency_code ,sum(1) as batch_count ,sum(case when (a.dif_tran_code != '06') then a.dif_transaction_amount  else 0 end)-sum(case when (a.dif_tran_code = '06') then a.dif_transaction_amount else 0 end) as batch_amount ,sum(case when (a.dif_tran_code != '06') then 1 else 0 end) as purchase_count ,sum(case when (a.dif_tran_code != '06') then a.dif_transaction_amount  else 0 end) as purchase_amount ,sum(case when (a.dif_tran_code = '06') then 1  else 0 end) as refund_count ,sum(case when (a.dif_tran_code = '06') then a.dif_transaction_amount else 0 end ) as refund_amount ,sum(a.dif_transaction_amount) as transaction_amount ,sum(case when (a.dif_tran_code != '06') then 1  else 0 end) + sum(case when (a.dif_tran_code = '06') then 1  else 0 end ) as scheme_batch_count ,sum(case when (a.dif_tran_code != '06') then a.dif_transaction_amount else 0 end) - sum(case when (a.dif_tran_code = '06') then a.dif_transaction_amount  else 0 end) as scheme_batch_amount ,sum(case when (a.dif_tran_code != '06') then 1  else 0 end) as scheme_purchase_count ,sum(case when (a.dif_tran_code != '06') then a.dif_transaction_amount else 0 end) as scheme_purchase_amount ,sum(case when (a.dif_tran_code = '06') then 1  else 0 end ) as scheme_refund_count ,sum(case when (a.dif_tran_code = '06') then a.dif_transaction_amount  else 0 end) as scheme_refund_amount ,0 as source_file_key from `PROJECT_ID.consumption_layer.wwmaster_super_table` a group by a.corporate ,a.region ,a.principal ,a.associate ,a.chain ,a.dif_card_acceptor_id ,a.merchant_number ,a.dif_batch_control_number ,a.settle_alpha_currency_code ,a.dif_alpha_currency_code ,a.dif_tran_code ,a.dif_card_scheme ,cast(concat(cast(a.dif_file_date as string),' ','00:00:00') as timestamp) ) t1 ) t2 group by t2.file_date_time ,t2.card_acceptor_id ,t2.batch_control_number ,t2.merchant_number ,t2.corporate ,t2.region ,t2.principal ,t2.associate ,t2.chain ,t2.currency_code ,t2.batch_settlement_currency ,t2.hierarchy ,t2.card_scheme
       useLegacySql: false